unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, ComCtrls, Menus, Grids, TeEngine, Series,
  TeeProcs, Chart;

type
  TForm1 = class(TForm)
    MainMenu1: TMainMenu;
    Main1: TMenuItem;
    Open1: TMenuItem;
    Save1: TMenuItem;
    N1: TMenuItem;
    Exit1: TMenuItem;
    OpenDialog1: TOpenDialog;
    SaveDialog1: TSaveDialog;
    Timer1: TTimer;
    GroupBox1: TGroupBox;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    TrackBar1: TTrackBar;
    Button6: TButton;
    Edit6: TEdit;
    Label8: TLabel;
    Edit1: TEdit;
    Label1: TLabel;
    Edit7: TEdit;
    Label9: TLabel;
    GroupBox2: TGroupBox;
    Label3: TLabel;
    Label2: TLabel;
    GroupBox3: TGroupBox;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    GroupBox4: TGroupBox;
    Image1: TImage;
    StringGrid1: TStringGrid;
    GroupBox5: TGroupBox;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Visualisation1: TMenuItem;
    N2: TMenuItem;
    Chart1: TChart;
    Series1: TPointSeries;
    Button7: TButton;
    Series2: TLineSeries;
    Series3: TLineSeries;
    Series4: TLineSeries;
    procedure Open1Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Edit1Change(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure TrackBar1Change(Sender: TObject);
    procedure Image1MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Button6Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Save1Click(Sender: TObject);
    procedure Image1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Visualisation1Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    loaded: boolean;
    { Public declarations }
  end;

var
  Form1: TForm1;
  BtmImgArr: array of TBitmap;
  BtmColorImgArr: array of TBitmap;
  FileCount:integer;
  Timei: integer = 0;
  S_data: array[0..1,0..1000] of real;
  x0, y0, x1, y1, y:integer;
  FirstPoint, SecondPoint: boolean;

implementation

uses Unit2;

{$R *.dfm}

procedure FindFirstFire(x0,y0,x1,y1: integer);
var i,j,k: integer;
    x,y: integer;
begin
  for i:=0 to Length(BtmImgArr) do
    for x:=x0-1 downto x1+1 do
      for y:=y0+1 to y1-1 do
        if  BtmImgArr[i].Canvas.Pixels[x,y] <> BtmImgArr[0].Canvas.Pixels[x,y] then
          begin
            Form1.Label10.Caption:='First fire frame: '+ IntToStr(i);
            Form1.Label11.Caption:='Time from experiment start: ' + FloatToStr(i*(1/StrToInt(Form1.Edit6.Text)));
            exit;
          end;
end;

procedure Piro1(srcBitmap, destBitmap: TBitmap; x0, y0, x1, y1:integer );
var
  x, y: integer;
  r, g, b: integer;
  col: TColor;
begin
  destBitmap.Width  := srcBitmap.Width ;
  destBitmap.Height := srcBitmap.Height;
  destBitmap.PixelFormat := pf32bit;
  for y := y0+1 to y1-1 do
    for x := x0-1 downto x1+1 do
    begin
      col := srcBitmap.Canvas.Pixels[x, y];
      // Blue: in 0-128, out 255-0
      b := 255 - GetBValue(col)*2;
      if b < 0 then b := 0;

      // Green: in 0-128, out 0-255, in 128-255, out 255-0
      if GetGValue(col) < 128 then g := GetGValue(col)*2
                              else g := 255 - (GetGValue(col) - 128)*2;

      // Red: 128-255, out 0-255
      r := (GetRValue(col) - 128)*2;
      if r < 0 then r := 0;
 
      destBitmap.Canvas.Pixels[x, y] := RGB(r, g, b);
    end;
end;

procedure TForm1.Open1Click(Sender: TObject);
var
  i: integer;
begin
  OpenDialog1.Options := [ofAllowMultiSelect, ofFileMustExist];
  OpenDialog1.Filter := 'BitMap (*.bmp)|*.bmp|All files (*.*)|*.*';
  if not OpenDialog1.Execute then Exit;
  SetLength(BtmImgArr, OpenDialog1.Files.Count);
  SetLength(BtmColorImgArr, OpenDialog1.Files.Count);
  FileCount:=OpenDialog1.Files.Count;
  for i := 0 to OpenDialog1.Files.Count - 1 do
    begin
      BtmImgArr[i] := TBitmap.Create;
      BtmColorImgArr[i] := TBitmap.Create;
      BtmImgArr[i].LoadFromFile(OpenDialog1.Files.Strings[i]);
    end;
  ShowMessage('Loaded');
  //////////////////////////////////////////////////////////////////////////////
  Image1.Height:=BtmImgArr[0].Height;
  Image1.Width:=BtmImgArr[0].Width;
  Image1.Top:=round(Groupbox4.Height/2 - Image1.Height/2);
  Image1.left:=round(Groupbox4.Width/2 - Image1.Width/2)-20;
  image1.Picture.Bitmap:=BtmImgArr[0];
  TrackBar1.Max:=FileCount-1;
  Button1.Enabled:=true;
  Button2.Enabled:=true;
  Button3.Enabled:=true;
  Button4.Enabled:=true;
  Button5.Enabled:=true;
  LAbel12.Caption:='Summary count of frames: '+ IntToStr(OpenDialog1.Files.Count);
  TrackBar1.Enabled:=true;
  //////////////////////////////////////////////////////////////////////////////
  loaded:=True;
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
  if Timei = FileCount then
    Timei:=0;
  Image1.Picture.Bitmap:=BtmImgArr[Timei];
  TrackBar1.Position:=Timei;
  Timei:=Timei+1;

end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  Timer1.Enabled:=True;
end;

procedure TForm1.Button2Click(Sender: TObject);
begin
  Timer1.Enabled:=False;
end;

procedure TForm1.Button3Click(Sender: TObject);
begin
  if Timei = 0 then
    Timei:=Filecount;
  Timei:=Timei-1;
  Image1.Picture.Bitmap:=BtmImgArr[Timei];
  TrackBar1.Position:=Timei;
end;

procedure TForm1.Button4Click(Sender: TObject);
begin
  Timei:=Timei+1;
  if Timei = FileCount then
    Timei:=0;
  Image1.Picture.Bitmap:=BtmImgArr[Timei];
  TrackBar1.Position:=Timei;
end;

procedure TForm1.Edit1Change(Sender: TObject);
begin
  Timer1.Enabled:=False;
  Timer1.Interval:=Round(1000/StrToInt(Edit1.Text))
end;

procedure TForm1.Button5Click(Sender: TObject);
begin
  Timei:=0;
  Image1.Picture.Bitmap:=BtmImgArr[Timei];
  TrackBar1.Position:=Timei;
end;

procedure TForm1.TrackBar1Change(Sender: TObject);
begin
  Timei:=TrackBar1.Position;
  Image1.Picture.Bitmap:=BtmImgArr[Timei];
end;

procedure TForm1.Image1MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  if loaded = true then
    begin
      label2.Caption:='Pos X:' + IntToStr(X);
      label3.Caption:='Pos Y:' + IntToStr(Y);
    end;
end;

procedure TForm1.Button6Click(Sender: TObject);
var i,j,k: integer;
    temp_pix:integer;
    koeff,max,max_length: real;
begin
  if Edit7.Text <> '' then
  begin
    y:=Round((y1+y0)/2);
    For i:=0 to 1 do
      for j:=0 to 1000 do
        S_data[i,j]:=0;
    for i:=0 to Length(BtmImgArr)-1 do
      begin
        BtmImgArr[i].PixelFormat:=pf32bit;
        BtmImgArr[i].Canvas.Pen.Color:=clRed;
        BtmImgArr[i].Canvas.Brush.Style := bsClear;
        BtmImgArr[i].Canvas.Rectangle(x0,y0,x1,y1);
        temp_pix:=0;
        BtmImgArr[i].Canvas.MoveTo(x0-2,y);
        for j:=x0 downto x1 do
          if BtmImgArr[i].Canvas.Pixels[j,y] = clWhite then
            begin
              BtmImgArr[i].Canvas.LineTo(j-3,y);
              temp_pix:=temp_pix+1;
            end;
        S_data[0,i]:=i/StrToInt(Edit6.Text);
        S_data[1,i]:=temp_pix;
        temp_pix:=0;
      end;
    FindFirstFire(x0,y0,x1,y1);                     //нахождение первого кадра горения (смотри в начале)
    if Visualisation1.Checked = true then
      for i:=0 to Length(BtmImgArr)-1 do
        Piro1(BtmImgArr[i],BtmImgArr[i],x0,y0,x1,y1); //строчка красоты, но бесполезная, сильно тормозит работу программы
    max:=0;
    for j:=0 to 1000 do
      if max < S_data[1,j] then
        max:= S_data[1,j];
    koeff:=StrToFloat(Edit7.Text)/max;
    For j:=0 to 1000 do
      S_data[1,j]:=S_data[1,j]*koeff/1000;
    StringGrid1.RowCount:=Length(S_Data[0]);

    for i:=0 to Length(BtmImgArr)-1 do
      begin
        BtmImgArr[i].Canvas.Font.Color:=clWhite;
        BtmImgArr[i].Width:=BtmImgArr[i].Width+50;
        BtmImgArr[i].Canvas.TextOut(BtmImgArr[i].Width-60,BtmImgArr[i].Height-50,'Length (m):');
        BtmImgArr[i].Canvas.TextOut(BtmImgArr[i].Width-60,BtmImgArr[i].Height-35, FloatToStrF(S_data[1,i],ffFixed,4,4));
      end;
      
    Image1.Width:=BtmImgArr[0].Width;

    max_length:=StrToInt(Edit7.Text)/1000;
    Series1.Clear;
    i:=0;
    While i<>Length(S_data[1]) do
      if S_data[1,i] = max_length then
        break
      else
        begin
          if S_data[1,i] <> 0 then
            Series1.AddXY(S_data[0,i],S_data[1,i]);
          Inc(i);
        end;


    j:=1;
    for i:=0 to 1000 do
      If S_Data[1,i] <> 0 then
        Begin
          StringGrid1.Cells[0,j]:=FloatToStr(S_data[0,i]);
          StringGrid1.Cells[1,j]:=FloatToStr(S_data[1,i]);
          j:=j+1;
        end;
    Timei:=0;
    Timer1.Enabled:=False;
    ShowMessage('Done!');
    Save1.Enabled:=true;
  end
    else
      ShowMessage('Enter sample length');
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  Loaded:=False;
  StringGrid1.Cells[0,0]:='Time, sec';
  StringGrid1.Cells[1,0]:='Length, m';
  Form1.Top:=round(Screen.Height/2-Form1.Height/2);
  Form1.Left:=round(Screen.Width/2-Form1.Width/2);
end;

procedure TForm1.Save1Click(Sender: TObject);
var savefile : textfile;
    i : integer;
    savefilename, savefilepath: string;
    temptxt: string;
begin
  SaveDialog1.Execute;
  savefilename:=savedialog1.FileName;
  SysUtils.ForceDirectories(SaveFileName);
  savefilename := savefilename+'\'+'Data.txt';
  assignfile (savefile,savefilename);
  rewrite(savefile);
  for i:=1 to 1000 do
    if S_data[1,i]<>0 then
      Writeln(savefile, FloatToStr(S_data[0,i]) + #9 + FloatToStr(S_data[1,i]));
 closefile(savefile);
 savefilename:=savedialog1.FileName;
 for i:=0 to Length(BtmImgArr)-1 do
  BtmImgArr[i].SaveToFile(savefilename+'\'+IntToStr(i) + '.bmp');
end;

procedure TForm1.Image1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbLeft then
    begin
      x0:=X;
      Label4.Caption:= 'X0 Pos: ' + IntToStr(X);
      y0:=Y;
      Label5.Caption:= 'Y0 Pos: ' + IntToStr(Y);
      FirstPoint:=true;
      button7.Enabled:=True;
      If (FirstPoint = true)and(SecondPoint = true) then
        button6.Enabled:=True;
    end;
  if Button = mbRight then
    begin
      x1:=X;
      Label6.Caption:= 'X1 Pos: ' + IntToStr(X);
      y1:=Y;
      Label7.Caption:= 'Y1 Pos: ' + IntToStr(Y);
      SecondPoint:=true;
      button7.Enabled:=True;
      If (FirstPoint = true)and(SecondPoint = true) then
        button6.Enabled:=True;
    end;
end;

procedure TForm1.Visualisation1Click(Sender: TObject);
begin
  if  Visualisation1.Checked = false then
    Visualisation1.Checked:=True
  else
    Visualisation1.Checked:=false;
end;

procedure TForm1.Button7Click(Sender: TObject);
begin
  x0:=0;
  Label4.Caption:= 'X0 Pos:';
  y0:=0;
  Label5.Caption:= 'Y0 Pos:';
  x1:=0;
  Label6.Caption:= 'X1 Pos:';
  y1:=0;
  Label7.Caption:= 'Y1 Pos:';

  FirstPoint:=false;
  SecondPoint:=false;
  Button6.Enabled:=false;
  button7.Enabled:=false;
end;

procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Application.Terminate;
end;

end.
